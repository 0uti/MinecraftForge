--- ../src-base/minecraft/net/minecraft/creativetab/CreativeTabs.java
+++ ../src-work/minecraft/net/minecraft/creativetab/CreativeTabs.java
@@ -138,8 +138,22 @@
     private ItemStack iconItemStack;
     private static final String __OBFID = "CL_00000005";
 
+    public CreativeTabs(String label)
+    {
+        this(getNextID(), label);
+    }
+
     public CreativeTabs(int index, String label)
     {
+        if (index >= creativeTabArray.length)
+        {
+            CreativeTabs[] tmp = new CreativeTabs[index + 1];
+            for (int x = 0; x < creativeTabArray.length; x++)
+            {
+                tmp[x] = creativeTabArray[x];
+            }
+            creativeTabArray = tmp;
+        }
         this.tabIndex = index;
         this.tabLabel = label;
         creativeTabArray[index] = this;
@@ -222,12 +236,20 @@
     @SideOnly(Side.CLIENT)
     public int getTabColumn()
     {
+        if (tabIndex > 11)
+        {
+            return ((tabIndex - 12) % 10) % 5;
+        }
         return this.tabIndex % 6;
     }
 
     @SideOnly(Side.CLIENT)
     public boolean isTabInFirstRow()
     {
+        if (tabIndex > 11)
+        {
+            return ((tabIndex - 12) % 10) < 5;
+        }
         return this.tabIndex < 6;
     }
 
@@ -269,10 +291,17 @@
     {
         for (Item item : Item.itemRegistry)
         {
-            if (item != null && item.getCreativeTab() == this)
+            if (item == null)
             {
-                item.getSubItems(item, this, p_78018_1_);
+                continue;
             }
+            for (CreativeTabs tab : item.getCreativeTabs())
+            {
+                if (tab == this)
+                {
+                    item.getSubItems(item, this, p_78018_1_);
+                }
+            }
         }
 
         if (this.getRelevantEnchantmentTypes() != null)
@@ -305,4 +334,39 @@
             }
         }
     }
+
+    public int getTabPage()
+    {
+        if (tabIndex > 11)
+        {
+            return ((tabIndex - 12) / 10) + 1;
+        }
+        return 0;
+    }
+
+    public static int getNextID()
+    {
+        return creativeTabArray.length;
+    }
+
+    /**
+     * Determines if the search bar should be shown for this tab.
+     *
+     * @return True to show the bar
+     */
+    public boolean hasSearchBar()
+    {
+        return tabIndex == CreativeTabs.tabAllSearch.tabIndex;
+    }
+
+    /**
+     * Gets the width of the search bar of the creative tab, use this if your
+     * creative tab name overflows together with a custom texture.
+     *
+     * @return The width of the search bar, 89 by default
+     */
+    public int getSearchbarWidth()
+    {
+        return 89;
+    }
 }
