--- ../src-base/minecraft/net/minecraft/server/management/ServerConfigurationManager.java
+++ ../src-work/minecraft/net/minecraft/server/management/ServerConfigurationManager.java
@@ -100,7 +100,7 @@
         this.maxPlayers = 8;
     }
 
-    public void initializeConnectionToPlayer(NetworkManager netManager, EntityPlayerMP playerIn)
+    public void initializeConnectionToPlayer(NetworkManager netManager, EntityPlayerMP playerIn, NetHandlerPlayServer nethandlerplayserver)
     {
         GameProfile gameprofile = playerIn.getGameProfile();
         PlayerProfileCache playerprofilecache = this.mcServer.getPlayerProfileCache();
@@ -109,6 +109,17 @@
         playerprofilecache.func_152649_a(gameprofile);
         NBTTagCompound nbttagcompound = this.readPlayerDataFromFile(playerIn);
         playerIn.setWorld(this.mcServer.worldServerForDimension(playerIn.dimension));
+
+        World playerWorld = this.mcServer.worldServerForDimension(playerIn.dimension);
+        if (playerWorld == null)
+        {
+            playerIn.dimension=0;
+            playerWorld=this.mcServer.worldServerForDimension(0);
+            BlockPos spawnPoint = playerWorld.provider.getRandomizedSpawnPoint();
+            playerIn.setPosition(spawnPoint.getX(), spawnPoint.getY(), spawnPoint.getZ());
+        }
+
+        playerIn.setWorld(playerWorld);
         playerIn.theItemInWorldManager.setWorld((WorldServer)playerIn.worldObj);
         String s1 = "local";
 
@@ -122,7 +133,7 @@
         WorldInfo worldinfo = worldserver.getWorldInfo();
         BlockPos blockpos = worldserver.getSpawnPoint();
         this.func_72381_a(playerIn, (EntityPlayerMP)null, worldserver);
-        NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.mcServer, netManager, playerIn);
+        playerIn.playerNetServerHandler = nethandlerplayserver;
         nethandlerplayserver.sendPacket(new S01PacketJoinGame(playerIn.getEntityId(), playerIn.theItemInWorldManager.getGameType(), worldinfo.isHardcoreModeEnabled(), worldserver.provider.getDimensionId(), worldserver.getDifficulty(), this.getMaxPlayers(), worldinfo.getTerrainType(), worldserver.getGameRules().getGameRuleBooleanValue("reducedDebugInfo")));
         nethandlerplayserver.sendPacket(new S3FPacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).writeString(this.getServerInstance().getServerModName())));
         nethandlerplayserver.sendPacket(new S41PacketServerDifficulty(worldinfo.getDifficulty(), worldinfo.isDifficultyLocked()));
@@ -162,6 +173,7 @@
 
         playerIn.addSelfToInternalCraftingInventory();
 
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerLoggedIn(playerIn);
         if (nbttagcompound != null && nbttagcompound.hasKey("Riding", 10))
         {
             Entity entity = EntityList.createEntityFromNBT(nbttagcompound.getCompoundTag("Riding"), worldserver);
@@ -264,6 +276,7 @@
             playerIn.readFromNBT(nbttagcompound);
             nbttagcompound1 = nbttagcompound;
             logger.debug("loading single player");
+            net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(playerIn, this.playerNBTManagerObj, playerIn.getUniqueID().toString());
         }
         else
         {
@@ -273,8 +286,23 @@
         return nbttagcompound1;
     }
 
+    public NBTTagCompound getPlayerNBT(EntityPlayerMP player)
+    {
+        // Hacky method to allow loading the NBT for a player prior to login
+        NBTTagCompound nbttagcompound = this.mcServer.worldServers[0].getWorldInfo().getPlayerNBTTagCompound();
+        if (player.getName().equals(this.mcServer.getServerOwner()) && nbttagcompound != null)
+        {
+            return nbttagcompound;
+        }
+        else
+        {
+            return ((net.minecraft.world.storage.SaveHandler)this.playerNBTManagerObj).getPlayerNBT(player);
+        }
+    }
     protected void writePlayerData(EntityPlayerMP playerIn)
     {
+        if (playerIn.playerNetServerHandler == null) return;
+
         this.playerNBTManagerObj.writePlayerData(playerIn);
         StatisticsFile statisticsfile = (StatisticsFile)this.playerStatFiles.get(playerIn.getUniqueID());
 
@@ -290,6 +318,7 @@
         this.uuidToPlayerMap.put(playerIn.getUniqueID(), playerIn);
         this.sendPacketToAllPlayers(new S38PacketPlayerListItem(S38PacketPlayerListItem.Action.ADD_PLAYER, new EntityPlayerMP[] {playerIn}));
         WorldServer worldserver = this.mcServer.worldServerForDimension(playerIn.dimension);
+        net.minecraftforge.common.chunkio.ChunkIOExecutor.adjustPoolSize(this.getCurrentPlayerCount());
         worldserver.spawnEntityInWorld(playerIn);
         this.func_72375_a(playerIn, (WorldServer)null);
 
@@ -307,6 +336,7 @@
 
     public void playerLoggedOut(EntityPlayerMP playerIn)
     {
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerLoggedOut(playerIn);
         playerIn.triggerAchievement(StatList.leaveGameStat);
         this.writePlayerData(playerIn);
         WorldServer worldserver = playerIn.getServerForPlayer();
@@ -495,17 +525,27 @@
         {
             playerIn.playerNetServerHandler.sendPacket(new S1DPacketEntityEffect(playerIn.getEntityId(), potioneffect));
         }
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerChangedDimensionEvent(playerIn, j, dimension);
     }
 
     public void transferEntityToWorld(Entity entityIn, int p_82448_2_, WorldServer p_82448_3_, WorldServer p_82448_4_)
     {
-        double d0 = entityIn.posX;
-        double d1 = entityIn.posZ;
+        transferEntityToWorld(entityIn, p_82448_2_, p_82448_3_, p_82448_4_, p_82448_4_.getDefaultTeleporter());
+    }
+
+    @SuppressWarnings("unused")
+    public void transferEntityToWorld(Entity entityIn, int p_82448_2_, WorldServer p_82448_3_, WorldServer p_82448_4_, net.minecraft.world.Teleporter teleporter)
+    {
+        net.minecraft.world.WorldProvider pOld = p_82448_3_.provider;
+        net.minecraft.world.WorldProvider pNew = p_82448_4_.provider;
+        double moveFactor = pOld.getMovementFactor() / pNew.getMovementFactor();
+        double d0 = entityIn.posX * moveFactor;
+        double d1 = entityIn.posZ * moveFactor;
         double d2 = 8.0D;
         float f = entityIn.rotationYaw;
         p_82448_3_.theProfiler.startSection("moving");
 
-        if (entityIn.dimension == -1)
+        if (false && entityIn.dimension == -1) //Forge Kill it but dont comment out so we can rename it.
         {
             d0 = MathHelper.clamp_double(d0 / d2, p_82448_4_.getWorldBorder().minX() + 16.0D, p_82448_4_.getWorldBorder().maxX() - 16.0D);
             d1 = MathHelper.clamp_double(d1 / d2, p_82448_4_.getWorldBorder().minZ() + 16.0D, p_82448_4_.getWorldBorder().maxZ() - 16.0D);
@@ -516,7 +556,7 @@
                 p_82448_3_.updateEntityWithOptionalForce(entityIn, false);
             }
         }
-        else if (entityIn.dimension == 0)
+        else if (false && entityIn.dimension == 0) //Forge Kill it but dont comment out so we can rename it.
         {
             d0 = MathHelper.clamp_double(d0 * d2, p_82448_4_.getWorldBorder().minX() + 16.0D, p_82448_4_.getWorldBorder().maxX() - 16.0D);
             d1 = MathHelper.clamp_double(d1 * d2, p_82448_4_.getWorldBorder().minZ() + 16.0D, p_82448_4_.getWorldBorder().maxZ() - 16.0D);
@@ -527,7 +567,8 @@
                 p_82448_3_.updateEntityWithOptionalForce(entityIn, false);
             }
         }
-        else
+
+        if (entityIn.dimension == 1)
         {
             BlockPos blockpos;
 
@@ -562,7 +603,7 @@
             if (entityIn.isEntityAlive())
             {
                 entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
-                p_82448_4_.getDefaultTeleporter().placeInPortal(entityIn, f);
+                teleporter.placeInPortal(entityIn, f);
                 p_82448_4_.spawnEntityInWorld(entityIn);
                 p_82448_4_.updateEntityWithOptionalForce(entityIn, false);
             }
