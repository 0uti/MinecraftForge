--- ../src-base/minecraft/net/minecraft/client/renderer/texturefx/TextureFlamesFX.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/texturefx/TextureFlamesFX.java
@@ -1,18 +1,32 @@
 package net.minecraft.client.renderer.texturefx;
 
+import cpw.mods.fml.client.FMLTextureFX;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import net.minecraft.block.Block;
 
 @SideOnly(Side.CLIENT)
-public class TextureFlamesFX extends TextureFX
+public class TextureFlamesFX extends FMLTextureFX
 {
     protected float[] field_76869_g = new float[320];
     protected float[] field_76870_h = new float[320];
+    private int fireTileSize = 20;
+    private int fireGridSize = 320;
 
     public TextureFlamesFX(int p_i3215_1_)
     {
         super(Block.field_72067_ar.field_72059_bZ + p_i3215_1_ * 16);
+        setup();
+    }
+
+    @Override
+    public void setup()
+    {
+        super.setup();
+        fireTileSize = tileSizeBase + (tileSizeBase >> 2);
+        fireGridSize = fireTileSize * tileSizeBase;
+        field_76869_g = new float[fireGridSize];
+        field_76870_h = new float[fireGridSize];
     }
 
     public void func_76846_a()
@@ -20,32 +34,34 @@
         int i;
         float f;
         int j;
+        float fireFactor1 = 3.0F + (float)(tileSizeBase >> 4);
+        float fireFactor2 = 1.01F + (0.8F / tileSizeBase);
 
-        for (int k = 0; k < 16; ++k)
+        for (int k = 0; k < tileSizeBase; ++k)
         {
-            for (int l = 0; l < 20; ++l)
+            for (int l = 0; l < fireTileSize; ++l)
             {
-                i = 18;
-                f = this.field_76869_g[k + (l + 1) % 20 * 16] * (float)i;
+                i = fireTileSize - (tileSizeBase >> 3);
+                f = this.field_76869_g[k + (l + 1) % fireTileSize * tileSizeBase] * (float)i;
 
                 for (int i1 = k - 1; i1 <= k + 1; ++i1)
                 {
                     for (j = l; j <= l + 1; ++j)
                     {
-                        if (i1 >= 0 && j >= 0 && i1 < 16 && j < 20)
+                        if (i1 >= 0 && j >= 0 && i1 < tileSizeBase && j < fireTileSize)
                         {
-                            f += this.field_76869_g[i1 + j * 16];
+                            f += this.field_76869_g[i1 + j * tileSizeBase];
                         }
 
                         ++i;
                     }
                 }
 
-                this.field_76870_h[k + l * 16] = f / ((float)i * 1.0600001F);
+                this.field_76870_h[k + l * tileSizeBase] = f / ((float)i * fireFactor2);
 
-                if (l >= 19)
+                if (l >= fireTileSize - (tileSizeBase >> 4))
                 {
-                    this.field_76870_h[k + l * 16] = (float)(Math.random() * Math.random() * Math.random() * 4.0D + Math.random() * 0.10000000149011612D + 0.20000000298023224D);
+                    this.field_76870_h[k + l * tileSizeBase] = (float)(Math.random() * Math.random() * Math.random() * fireFactor1 + Math.random() * 0.1F + 0.2F);
                 }
             }
         }
@@ -54,7 +70,7 @@
         this.field_76870_h = this.field_76869_g;
         this.field_76869_g = afloat;
 
-        for (i = 0; i < 256; ++i)
+        for (i = 0; i < tileSizeSquare; ++i)
         {
             f = this.field_76869_g[i] * 1.8F;
 
