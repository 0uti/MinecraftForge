--- ../src-base/minecraft/net/minecraft/client/renderer/texturefx/TextureWaterFX.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/texturefx/TextureWaterFX.java
@@ -1,11 +1,12 @@
 package net.minecraft.client.renderer.texturefx;
 
+import cpw.mods.fml.client.FMLTextureFX;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import net.minecraft.block.Block;
 
 @SideOnly(Side.CLIENT)
-public class TextureWaterFX extends TextureFX
+public class TextureWaterFX extends FMLTextureFX
 {
     protected float[] field_76855_g = new float[256];
     protected float[] field_76858_h = new float[256];
@@ -16,6 +17,18 @@
     public TextureWaterFX()
     {
         super(Block.field_71942_A.field_72059_bZ);
+        setup();
+    }
+
+    @Override
+    public void setup()
+    {
+        super.setup();
+        field_76855_g = new float[tileSizeSquare];
+        field_76858_h = new float[tileSizeSquare];
+        field_76859_i = new float[tileSizeSquare];
+        field_76856_j = new float[tileSizeSquare];
+        field_76857_k = 0;
     }
 
     public void func_76846_a()
@@ -27,39 +40,39 @@
         int k;
         int l;
 
-        for (i = 0; i < 16; ++i)
+        for (i = 0; i < tileSizeBase; ++i)
         {
-            for (j = 0; j < 16; ++j)
+            for (j = 0; j < tileSizeBase; ++j)
             {
                 f = 0.0F;
 
                 for (int i1 = i - 1; i1 <= i + 1; ++i1)
                 {
-                    k = i1 & 15;
-                    l = j & 15;
-                    f += this.field_76855_g[k + l * 16];
+                    k = i1 & tileSizeMask;
+                    l = j & tileSizeMask;
+                    f += this.field_76855_g[k + l * tileSizeBase];
                 }
 
-                this.field_76858_h[i + j * 16] = f / 3.3F + this.field_76859_i[i + j * 16] * 0.8F;
+                this.field_76858_h[i + j * tileSizeBase] = f / 3.3F + this.field_76859_i[i + j * tileSizeBase] * 0.8F;
             }
         }
 
-        for (i = 0; i < 16; ++i)
+        for (i = 0; i < tileSizeBase; ++i)
         {
-            for (j = 0; j < 16; ++j)
+            for (j = 0; j < tileSizeBase; ++j)
             {
-                this.field_76859_i[i + j * 16] += this.field_76856_j[i + j * 16] * 0.05F;
+                this.field_76859_i[i + j * tileSizeBase] += this.field_76856_j[i + j * tileSizeBase] * 0.05F;
 
-                if (this.field_76859_i[i + j * 16] < 0.0F)
+                if (this.field_76859_i[i + j * tileSizeBase] < 0.0F)
                 {
-                    this.field_76859_i[i + j * 16] = 0.0F;
+                    this.field_76859_i[i + j * tileSizeBase] = 0.0F;
                 }
 
-                this.field_76856_j[i + j * 16] -= 0.1F;
+                this.field_76856_j[i + j * tileSizeBase] -= 0.1F;
 
                 if (Math.random() < 0.05D)
                 {
-                    this.field_76856_j[i + j * 16] = 0.5F;
+                    this.field_76856_j[i + j * tileSizeBase] = 0.5F;
                 }
             }
         }
@@ -68,7 +81,7 @@
         this.field_76858_h = this.field_76855_g;
         this.field_76855_g = afloat;
 
-        for (j = 0; j < 256; ++j)
+        for (j = 0; j < tileSizeSquare; ++j)
         {
             f = this.field_76855_g[j];
 
