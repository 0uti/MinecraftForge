--- ../src-base/minecraft/net/minecraft/client/renderer/ItemRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/ItemRenderer.java
@@ -1,5 +1,6 @@
 package net.minecraft.client.renderer;
 
+import cpw.mods.fml.client.TextureFXManager;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import net.minecraft.block.Block;
@@ -40,7 +41,12 @@
     public void func_78443_a(EntityLiving p_78443_1_, ItemStack p_78443_2_, int p_78443_3_)
     {
         GL11.glPushMatrix();
-        Block block = Block.field_71973_m[p_78443_2_.field_77993_c];
+
+        Block block = null;
+        if (p_78443_2_.field_77993_c < Block.field_71973_m.length)
+        {
+            block = Block.field_71973_m[p_78443_2_.field_77993_c];
+        }
 
         if (block != null && RenderBlocks.func_78597_b(block.func_71857_b()))
         {
@@ -136,10 +142,17 @@
         float f7;
         float f8;
 
-        for (i = 0; i < 16; ++i)
-        {
-            f6 = (float)i / 16.0F;
-            f7 = p_78439_1_ + (p_78439_3_ - p_78439_1_) * f6 - 0.001953125F;
+        /* Gets the width/16 of the currently bound texture, used
+         * to fix the side rendering issues on textures != 16 */
+        int tileSize = TextureFXManager.instance().getTextureDimensions(GL11.glGetInteger(GL11.GL_TEXTURE_BINDING_2D)).width / 16;
+
+        float tx = 1.0f / (32 * tileSize);
+        float tz = 1.0f /  tileSize;
+
+        for (i = 0; i < tileSize; ++i)
+        {
+            f6 = (float)i / tileSize;
+            f7 = p_78439_1_ + (p_78439_3_ - p_78439_1_) * f6 - tx;
             f8 = f5 * f6;
             p_78439_0_.func_78374_a((double)f8, 0.0D, (double)(0.0F - p_78439_5_), (double)f7, (double)p_78439_4_);
             p_78439_0_.func_78374_a((double)f8, 0.0D, 0.0D, (double)f7, (double)p_78439_4_);
@@ -151,11 +164,11 @@
         p_78439_0_.func_78382_b();
         p_78439_0_.func_78375_b(1.0F, 0.0F, 0.0F);
 
-        for (i = 0; i < 16; ++i)
-        {
-            f6 = (float)i / 16.0F;
-            f7 = p_78439_1_ + (p_78439_3_ - p_78439_1_) * f6 - 0.001953125F;
-            f8 = f5 * f6 + 0.0625F;
+        for (i = 0; i < tileSize; ++i)
+        {
+            f6 = (float)i / tileSize;
+            f7 = p_78439_1_ + (p_78439_3_ - p_78439_1_) * f6 - tx;
+            f8 = f5 * f6 + tz;
             p_78439_0_.func_78374_a((double)f8, 1.0D, (double)(0.0F - p_78439_5_), (double)f7, (double)p_78439_2_);
             p_78439_0_.func_78374_a((double)f8, 1.0D, 0.0D, (double)f7, (double)p_78439_2_);
             p_78439_0_.func_78374_a((double)f8, 0.0D, 0.0D, (double)f7, (double)p_78439_4_);
@@ -166,11 +179,11 @@
         p_78439_0_.func_78382_b();
         p_78439_0_.func_78375_b(0.0F, 1.0F, 0.0F);
 
-        for (i = 0; i < 16; ++i)
-        {
-            f6 = (float)i / 16.0F;
-            f7 = p_78439_4_ + (p_78439_2_ - p_78439_4_) * f6 - 0.001953125F;
-            f8 = f5 * f6 + 0.0625F;
+        for (i = 0; i < tileSize; ++i)
+        {
+            f6 = (float)i / tileSize;
+            f7 = p_78439_4_ + (p_78439_2_ - p_78439_4_) * f6 - tx;
+            f8 = f5 * f6 + tz;
             p_78439_0_.func_78374_a(0.0D, (double)f8, 0.0D, (double)p_78439_1_, (double)f7);
             p_78439_0_.func_78374_a((double)f5, (double)f8, 0.0D, (double)p_78439_3_, (double)f7);
             p_78439_0_.func_78374_a((double)f5, (double)f8, (double)(0.0F - p_78439_5_), (double)p_78439_3_, (double)f7);
@@ -181,10 +194,10 @@
         p_78439_0_.func_78382_b();
         p_78439_0_.func_78375_b(0.0F, -1.0F, 0.0F);
 
-        for (i = 0; i < 16; ++i)
-        {
-            f6 = (float)i / 16.0F;
-            f7 = p_78439_4_ + (p_78439_2_ - p_78439_4_) * f6 - 0.001953125F;
+        for (i = 0; i < tileSize; ++i)
+        {
+            f6 = (float)i / tileSize;
+            f7 = p_78439_4_ + (p_78439_2_ - p_78439_4_) * f6 - tx;
             f8 = f5 * f6;
             p_78439_0_.func_78374_a((double)f5, (double)f8, 0.0D, (double)p_78439_3_, (double)f7);
             p_78439_0_.func_78374_a(0.0D, (double)f8, 0.0D, (double)p_78439_1_, (double)f7);
