--- ../src-base/minecraft/net/minecraft/src/TextureWatchFX.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src-work/minecraft/net/minecraft/src/TextureWatchFX.java	0000-00-00 00:00:00.000000000 -0000
@@ -18,15 +18,21 @@
         super(Item.field_4023_aQ.func_27009_a(0));
         this.field_4225_g = p_i364_1_;
         this.field_1128_f = 1;
-
+        setup();
+    }
+    
+    public void setup()
+    {
+        field_4224_h = new int[textureGridSize];
+        field_4223_i = new int[textureGridSize];
         try
         {
-            BufferedImage var2 = ImageIO.read(Minecraft.class.getResource("/gui/items.png"));
-            int var3 = this.field_1126_b % 16 * 16;
-            int var4 = this.field_1126_b / 16 * 16;
-            var2.getRGB(var3, var4, 16, 16, this.field_4224_h, 0, 16);
-            var2 = ImageIO.read(Minecraft.class.getResource("/misc/dial.png"));
-            var2.getRGB(0, 0, 16, 16, this.field_4223_i, 0, 16);
+            BufferedImage var2 = ImageIO.read(field_4225_g.field_6298_C.field_6534_a.func_6481_a("/gui/items.png"));
+            int var3 = this.field_1126_b % 16 * textureLength;
+            int var4 = this.field_1126_b / 16 * textureLength;
+            var2.getRGB(var3, var4, textureLength, textureLength, this.field_4224_h, 0, textureLength);
+            var2 = ImageIO.read(field_4225_g.field_6298_C.field_6534_a.func_6481_a("/misc/dial.png"));
+            var2.getRGB(0, 0, textureLength, textureLength, this.field_4223_i, 0, textureLength);
         }
         catch (IOException var5)
         {
@@ -36,6 +42,9 @@
 
     public void func_783_a()
     {
+        if (field_4224_h.length!=textureGridSize) {
+            setup();
+        }
         double var1 = 0.0D;
 
         if (this.field_4225_g.field_6324_e != null && this.field_4225_g.field_6322_g != null)
@@ -71,13 +80,14 @@
             var22 = 1.0D;
         }
 
+        int textureLengthMask = textureLength - 1;
         this.field_4221_k += var22 * 0.1D;
         this.field_4221_k *= 0.8D;
         this.field_4222_j += this.field_4221_k;
         double var5 = Math.sin(this.field_4222_j);
         double var7 = Math.cos(this.field_4222_j);
 
-        for (int var9 = 0; var9 < 256; ++var9)
+        for (int var9 = 0; var9 < textureGridSize; ++var9)
         {
             int var10 = this.field_4224_h[var9] >> 24 & 255;
             int var11 = this.field_4224_h[var9] >> 16 & 255;
@@ -86,12 +96,12 @@
 
             if (var11 == var13 && var12 == 0 && var13 > 0)
             {
-                double var14 = -((double)(var9 % 16) / 15.0D - 0.5D);
-                double var16 = (double)(var9 / 16) / 15.0D - 0.5D;
+                double var14 = -((double)(var9 % textureLength) / textureLengthMask - 0.5D);
+                double var16 = (double)(var9 / textureLength) / textureLengthMask - 0.5D;
                 int var18 = var11;
-                int var19 = (int)((var14 * var7 + var16 * var5 + 0.5D) * 16.0D);
-                int var20 = (int)((var16 * var7 - var14 * var5 + 0.5D) * 16.0D);
-                int var21 = (var19 & 15) + (var20 & 15) * 16;
+                int var19 = (int)((var14 * var7 + var16 * var5 + 0.5D) * textureLength);
+                int var20 = (int)((var16 * var7 - var14 * var5 + 0.5D) * textureLength);
+                int var21 = (var19 & textureLengthMask) + (var20 & textureLengthMask) * textureLength;
                 var10 = this.field_4223_i[var21] >> 24 & 255;
                 var11 = (this.field_4223_i[var21] >> 16 & 255) * var11 / 255;
                 var12 = (this.field_4223_i[var21] >> 8 & 255) * var18 / 255;
