++++ REJECTED PATCH 9
         {
             while (!this.scheduledTasks.isEmpty())
             {
-                ((FutureTask)this.scheduledTasks.poll()).run();
+                net.minecraftforge.fml.common.FMLCommonHandler.callFuture(((FutureTask)this.scheduledTasks.poll()));
             }
         }
 
++++ END PATCH
++++ REJECTED PATCH 10
 
         if (!this.skipRenderWorld)
         {
+            net.minecraftforge.fml.common.FMLCommonHandler.instance().onRenderTickStart(this.timer.renderPartialTicks);
             this.mcProfiler.endStartSection("gameRenderer");
             this.entityRenderer.updateCameraAndRender(this.timer.renderPartialTicks);
             this.mcProfiler.endSection();
+            net.minecraftforge.fml.common.FMLCommonHandler.instance().onRenderTickEnd(this.timer.renderPartialTicks);
         }
 
         this.mcProfiler.endSection();
++++ END PATCH
++++ REJECTED PATCH 12
                 case 2:
                     BlockPos blockpos = this.objectMouseOver.getBlockPos();
 
-                    if (this.theWorld.getBlockState(blockpos).getBlock().getMaterial() != Material.air)
+                    if (!this.theWorld.isAirBlock(blockpos))
                     {
                         int i = itemstack != null ? itemstack.stackSize : 0;
 
+
+                        boolean result = !net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(thePlayer, net.minecraftforge.event.entity.player.PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK, this.theWorld, blockpos, this.objectMouseOver.sideHit).isCanceled();
+                        if (result) { //Forge: Kept separate to simplify patch
                         if (this.playerController.func_178890_a(this.thePlayer, this.theWorld, itemstack, blockpos, this.objectMouseOver.sideHit, this.objectMouseOver.hitVec))
                         {
                             flag = false;
                             this.thePlayer.swingItem();
                         }
+                        }
 
                         if (itemstack == null)
                         {
++++ END PATCH
++++ REJECTED PATCH 13
         {
             ItemStack itemstack1 = this.thePlayer.inventory.getCurrentItem();
 
-            if (itemstack1 != null && this.playerController.sendUseItem(this.thePlayer, this.theWorld, itemstack1))
+            boolean result = !net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(thePlayer, net.minecraftforge.event.entity.player.PlayerInteractEvent.Action.RIGHT_CLICK_AIR, theWorld, null, null).isCanceled();
+            if (result && itemstack1 != null && this.playerController.sendUseItem(this.thePlayer, this.theWorld, itemstack1))
             {
                 this.entityRenderer.itemRenderer.resetEquippedProgress2();
             }
++++ END PATCH
++++ REJECTED PATCH 15
 
             while (Mouse.next())
             {
+                if (net.minecraftforge.client.ForgeHooksClient.postMouseEvent()) continue;
+
                 i = Mouse.getEventButton();
                 KeyBinding.setKeyBindState(i - 100, Mouse.getEventButtonState());
 
++++ END PATCH
++++ REJECTED PATCH 19
 
         while (!this.theIntegratedServer.serverIsInRunLoop())
         {
+            if (!net.minecraftforge.fml.common.StartupQuery.check())
+            {
+                loadWorld(null);
+                displayGuiScreen(null);
+                return;
+            }
             String s2 = this.theIntegratedServer.getUserMessage();
 
             if (s2 != null)
++++ END PATCH
++++ REJECTED PATCH 24
         if (this.objectMouseOver != null)
         {
             boolean flag = this.thePlayer.capabilities.isCreativeMode;
-            int i = 0;
-            boolean flag1 = false;
-            TileEntity tileentity = null;
-            Object object;
 
-            if (this.objectMouseOver.typeOfHit == MovingObjectPosition.MovingObjectType.BLOCK)
-            {
-                BlockPos blockpos = this.objectMouseOver.getBlockPos();
-                Block block = this.theWorld.getBlockState(blockpos).getBlock();
-
-                if (block.getMaterial() == Material.air)
-                {
-                    return;
-                }
-
-                object = block.getItem(this.theWorld, blockpos);
-
-                if (object == null)
-                {
-                    return;
-                }
-
-                if (flag && GuiScreen.isCtrlKeyDown())
-                {
-                    tileentity = this.theWorld.getTileEntity(blockpos);
-                }
-
-                Block block1 = object instanceof ItemBlock && !block.isFlowerPot() ? Block.getBlockFromItem((Item)object) : block;
-                i = block1.getDamageValue(this.theWorld, blockpos);
-                flag1 = ((Item)object).getHasSubtypes();
-            }
-            else
-            {
-                if (this.objectMouseOver.typeOfHit != MovingObjectPosition.MovingObjectType.ENTITY || this.objectMouseOver.entityHit == null || !flag)
-                {
-                    return;
-                }
-
-                if (this.objectMouseOver.entityHit instanceof EntityPainting)
-                {
-                    object = Items.painting;
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityLeashKnot)
-                {
-                    object = Items.lead;
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityItemFrame)
-                {
-                    EntityItemFrame entityitemframe = (EntityItemFrame)this.objectMouseOver.entityHit;
-                    ItemStack itemstack = entityitemframe.getDisplayedItem();
-
-                    if (itemstack == null)
-                    {
-                        object = Items.item_frame;
-                    }
-                    else
-                    {
-                        object = itemstack.getItem();
-                        i = itemstack.getMetadata();
-                        flag1 = true;
-                    }
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityMinecart)
-                {
-                    EntityMinecart entityminecart = (EntityMinecart)this.objectMouseOver.entityHit;
-
-                    switch (Minecraft.SwitchEnumMinecartType.field_178901_b[entityminecart.getMinecartType().ordinal()])
-                    {
-                        case 1:
-                            object = Items.furnace_minecart;
-                            break;
-                        case 2:
-                            object = Items.chest_minecart;
-                            break;
-                        case 3:
-                            object = Items.tnt_minecart;
-                            break;
-                        case 4:
-                            object = Items.hopper_minecart;
-                            break;
-                        case 5:
-                            object = Items.command_block_minecart;
-                            break;
-                        default:
-                            object = Items.minecart;
-                    }
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityBoat)
-                {
-                    object = Items.boat;
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityArmorStand)
-                {
-                    object = Items.armor_stand;
-                }
-                else
-                {
-                    object = Items.spawn_egg;
-                    i = EntityList.getEntityID(this.objectMouseOver.entityHit);
-                    flag1 = true;
-
-                    if (!EntityList.entityEggs.containsKey(Integer.valueOf(i)))
-                    {
-                        return;
-                    }
-                }
-            }
-
             InventoryPlayer inventoryplayer = this.thePlayer.inventory;
 
-            if (tileentity == null)
-            {
-                inventoryplayer.setCurrentItem((Item)object, i, flag1, flag);
-            }
-            else
-            {
-                NBTTagCompound nbttagcompound1 = new NBTTagCompound();
-                tileentity.writeToNBT(nbttagcompound1);
-                ItemStack itemstack1 = new ItemStack((Item)object, 1, i);
-                itemstack1.setTagInfo("BlockEntityTag", nbttagcompound1);
-                NBTTagCompound nbttagcompound = new NBTTagCompound();
-                NBTTagList nbttaglist = new NBTTagList();
-                nbttaglist.appendTag(new NBTTagString("(+NBT)"));
-                nbttagcompound.setTag("Lore", nbttaglist);
-                itemstack1.setTagInfo("display", nbttagcompound);
-                inventoryplayer.setInventorySlotContents(inventoryplayer.currentItem, itemstack1);
-            }
-
+            if (!net.minecraftforge.common.ForgeHooks.onPickBlock(this.objectMouseOver, this.thePlayer, this.theWorld)) return;
+            // We delete this code wholly instead of commenting it out, to make sure we detect changes in it between MC versions
             if (flag)
             {
                 int j = this.thePlayer.inventoryContainer.inventorySlots.size() - 9 + inventoryplayer.currentItem;
++++ END PATCH
++++ REJECTED PATCH 25
 
     public static int getGLMaximumTextureSize()
     {
-        for (int i = 16384; i > 0; i >>= 1)
-        {
-            GL11.glTexImage2D(GL11.GL_PROXY_TEXTURE_2D, 0, GL11.GL_RGBA, i, i, 0, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)null);
-            int j = GL11.glGetTexLevelParameteri(GL11.GL_PROXY_TEXTURE_2D, 0, GL11.GL_TEXTURE_WIDTH);
-
-            if (j != 0)
-            {
-                return i;
-            }
-        }
-
-        return -1;
+        //Forge we redirect this to our code which caches the value before any splash screen stuff is done.
+        return net.minecraftforge.fml.client.SplashProgress.getMaxTextureSize();
     }
 
     public boolean isSnooperEnabled()
++++ END PATCH
