++++ REJECTED PATCH 2
             this.theWorld.theProfiler.startSection("prepare");
             TileEntityRendererDispatcher.instance.cacheActiveRenderInfo(this.theWorld, this.mc.getTextureManager(), this.mc.fontRendererObj, this.mc.getRenderViewEntity(), partialTicks);
             this.renderManager.cacheActiveRenderInfo(this.theWorld, this.mc.fontRendererObj, this.mc.getRenderViewEntity(), this.mc.pointedEntity, this.mc.gameSettings, partialTicks);
+            if (pass == 0) // no indentation to shrink patch
+            {
             this.countEntitiesTotal = 0;
             this.countEntitiesRendered = 0;
             this.countEntitiesHidden = 0;
+            }
             Entity entity1 = this.mc.getRenderViewEntity();
             double d3 = entity1.lastTickPosX + (entity1.posX - entity1.lastTickPosX) * (double)partialTicks;
             double d4 = entity1.lastTickPosY + (entity1.posY - entity1.lastTickPosY) * (double)partialTicks;
++++ END PATCH
++++ REJECTED PATCH 3
             this.mc.entityRenderer.enableLightmap();
             this.theWorld.theProfiler.endStartSection("global");
             List list = this.theWorld.getLoadedEntityList();
+            if (pass == 0) // no indentation to shrink patch
+            {
             this.countEntitiesTotal = list.size();
+            }
             int i;
             Entity entity2;
 
             for (i = 0; i < this.theWorld.weatherEffects.size(); ++i)
             {
                 entity2 = (Entity)this.theWorld.weatherEffects.get(i);
+                if (!entity2.shouldRenderInPass(pass)) continue;
                 ++this.countEntitiesRendered;
 
                 if (entity2.isInRangeToRender3d(d0, d1, d2))
++++ END PATCH
++++ REJECTED PATCH 4
                 for (i = 0; i < list.size(); ++i)
                 {
                     entity2 = (Entity)list.get(i);
+                    if (!entity2.shouldRenderInPass(pass)) continue;
                     boolean flag = this.mc.getRenderViewEntity() instanceof EntityLivingBase && ((EntityLivingBase)this.mc.getRenderViewEntity()).isPlayerSleeping();
                     boolean flag1 = entity2.isInRangeToRender3d(d0, d1, d2) && (entity2.ignoreFrustumCheck || p_180446_2_.isBoundingBoxInFrustum(entity2.getEntityBoundingBox()) || entity2.riddenByEntity == this.mc.thePlayer) && entity2 instanceof EntityPlayer;
 
++++ END PATCH
++++ REJECTED PATCH 5
                 while (iterator2.hasNext())
                 {
                     Entity entity3 = (Entity)iterator2.next();
+                    if (!entity3.shouldRenderInPass(pass)) continue;
                     boolean flag2 = this.renderManager.shouldRender(entity3, p_180446_2_, d0, d1, d2) || entity3.riddenByEntity == this.mc.thePlayer;
 
                     if (flag2)
++++ END PATCH
++++ REJECTED PATCH 6
                 while (iterator1.hasNext())
                 {
                     tileentity = (TileEntity)iterator1.next();
+                    if (!tileentity.shouldRenderInPass(pass) || !p_180446_2_.isBoundingBoxInFrustum(tileentity.getRenderBoundingBox())) continue;
                     TileEntityRendererDispatcher.instance.renderTileEntity(tileentity, partialTicks, -1);
                 }
             }
++++ END PATCH
++++ REJECTED PATCH 7
 
                 Block block = this.theWorld.getBlockState(blockpos).getBlock();
 
-                if (tileentity != null && (block instanceof BlockChest || block instanceof BlockEnderChest || block instanceof BlockSign || block instanceof BlockSkull))
+                if (tileentity != null && tileentity.shouldRenderInPass(pass) && tileentity.canRenderBreaking() && p_180446_2_.isBoundingBoxInFrustum(tileentity.getRenderBoundingBox()))
                 {
                     TileEntityRendererDispatcher.instance.renderTileEntity(tileentity, partialTicks, destroyblockprogress.getPartialBlockDamage());
                 }
++++ END PATCH
