++++ REJECTED PATCH 2
     {
         BlockPos blockpos1 = pos.offset(facing.getOpposite());
         boolean flag = facing.getAxis().isHorizontal();
-        return flag && worldIn.isBlockNormalCube(blockpos1, true) || facing.equals(EnumFacing.UP) && this.canPlaceOn(worldIn, blockpos1);
+        return flag && worldIn.isSideSolid(blockpos1, facing, true) || facing.equals(EnumFacing.UP) && this.canPlaceOn(worldIn, blockpos1);
     }
 
     public IBlockState onBlockPlaced(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer)
++++ END PATCH
++++ REJECTED PATCH 3
 
                 enumfacing1 = (EnumFacing)iterator.next();
             }
-            while (!worldIn.isBlockNormalCube(pos.offset(enumfacing1.getOpposite()), true));
+            while (!worldIn.isSideSolid(pos.offset(enumfacing1.getOpposite()), enumfacing1, true));
 
             return this.getDefaultState().withProperty(FACING, enumfacing1);
         }
++++ END PATCH
++++ REJECTED PATCH 4
             EnumFacing enumfacing1 = enumfacing.getOpposite();
             boolean flag = false;
 
-            if (axis.isHorizontal() && !worldIn.isBlockNormalCube(pos.offset(enumfacing1), true))
+            if (axis.isHorizontal() && !worldIn.isSideSolid(pos.offset(enumfacing1), enumfacing1, true))
             {
                 flag = true;
             }
++++ END PATCH
