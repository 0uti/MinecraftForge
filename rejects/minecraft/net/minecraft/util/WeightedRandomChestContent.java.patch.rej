++++ REJECTED PATCH 1
         for (int j = 0; j < p_177630_3_; ++j)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.getRandomItem(random, p_177630_1_);
-            int k = weightedrandomchestcontent.theMinimumChanceToGenerateItem + random.nextInt(weightedrandomchestcontent.theMaximumChanceToGenerateItem - weightedrandomchestcontent.theMinimumChanceToGenerateItem + 1);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(random, p_177630_2_);
 
-            if (weightedrandomchestcontent.theItemId.getMaxStackSize() >= k)
+            for (ItemStack itemstack : stacks)
             {
-                ItemStack itemstack = weightedrandomchestcontent.theItemId.copy();
-                itemstack.stackSize = k;
                 p_177630_2_.setInventorySlotContents(random.nextInt(p_177630_2_.getSizeInventory()), itemstack);
             }
-            else
-            {
-                for (int l = 0; l < k; ++l)
-                {
-                    ItemStack itemstack1 = weightedrandomchestcontent.theItemId.copy();
-                    itemstack1.stackSize = 1;
-                    p_177630_2_.setInventorySlotContents(random.nextInt(p_177630_2_.getSizeInventory()), itemstack1);
-                }
-            }
         }
     }
 
++++ END PATCH
++++ REJECTED PATCH 2
         for (int j = 0; j < p_177631_3_; ++j)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.getRandomItem(random, p_177631_1_);
-            int k = weightedrandomchestcontent.theMinimumChanceToGenerateItem + random.nextInt(weightedrandomchestcontent.theMaximumChanceToGenerateItem - weightedrandomchestcontent.theMinimumChanceToGenerateItem + 1);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(random, dispenser);
 
-            if (weightedrandomchestcontent.theItemId.getMaxStackSize() >= k)
+            for (ItemStack itemstack : stacks)
             {
-                ItemStack itemstack = weightedrandomchestcontent.theItemId.copy();
-                itemstack.stackSize = k;
                 dispenser.setInventorySlotContents(random.nextInt(dispenser.getSizeInventory()), itemstack);
             }
-            else
-            {
-                for (int l = 0; l < k; ++l)
-                {
-                    ItemStack itemstack1 = weightedrandomchestcontent.theItemId.copy();
-                    itemstack1.stackSize = 1;
-                    dispenser.setInventorySlotContents(random.nextInt(dispenser.getSizeInventory()), itemstack1);
-                }
-            }
         }
     }
 
++++ END PATCH
