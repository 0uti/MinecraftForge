++++ REJECTED PATCH 1
                     {
                         if (j >= 0 && j < 256)
                         {
-                            Block block = worldIn.getBlockState(new BlockPos(k, j, l)).getBlock();
+                            BlockPos pos = new BlockPos(k, j, l);
+                            Block block = worldIn.getBlockState(pos).getBlock();
 
-                            if (block.getMaterial() != Material.air && block.getMaterial() != Material.leaves)
+                            if (!block.isAir(worldIn, pos) && !block.isLeaves(worldIn, pos))
                             {
                                 if (block != Blocks.water && block != Blocks.flowing_water)
                                 {
++++ END PATCH
++++ REJECTED PATCH 2
             }
             else
             {
-                Block block1 = worldIn.getBlockState(p_180709_3_.down()).getBlock();
+                BlockPos down = p_180709_3_.down();
+                Block block1 = worldIn.getBlockState(down).getBlock();
+                boolean isSoil = block1.canSustainPlant(worldIn, down, net.minecraft.util.EnumFacing.UP, ((net.minecraft.block.BlockSapling)Blocks.sapling));
 
-                if ((block1 == Blocks.grass || block1 == Blocks.dirt) && p_180709_3_.getY() < 256 - i - 1)
+                if (isSoil && p_180709_3_.getY() < 256 - i - 1)
                 {
-                    this.func_175921_a(worldIn, p_180709_3_.down());
+                    block1.onPlantGrow(worldIn, down, p_180709_3_);
                     int i1;
                     BlockPos blockpos1;
                     int l1;
++++ END PATCH
++++ REJECTED PATCH 3
                                 {
                                     blockpos1 = new BlockPos(i2, l1, j1);
 
-                                    if (!worldIn.getBlockState(blockpos1).getBlock().isFullBlock())
+                                    if (worldIn.getBlockState(blockpos1).getBlock().canBeReplacedByLeaves(worldIn, blockpos1))
                                     {
                                         this.func_175906_a(worldIn, blockpos1, Blocks.leaves);
                                     }
++++ END PATCH
++++ REJECTED PATCH 4
 
                     for (l1 = 0; l1 < i; ++l1)
                     {
-                        Block block2 = worldIn.getBlockState(p_180709_3_.up(l1)).getBlock();
+                        BlockPos upN = p_180709_3_.up(l1);
+                        Block block2 = worldIn.getBlockState(upN).getBlock();
 
-                        if (block2.getMaterial() == Material.air || block2.getMaterial() == Material.leaves || block2 == Blocks.flowing_water || block2 == Blocks.water)
+                        if (block2.isAir(worldIn, upN) || block2.isLeaves(worldIn, upN) || block2 == Blocks.flowing_water || block2 == Blocks.water)
                         {
                             this.func_175906_a(worldIn, p_180709_3_.up(l1), Blocks.log);
                         }
++++ END PATCH
++++ REJECTED PATCH 5
                             {
                                 BlockPos blockpos4 = new BlockPos(i2, l1, i1);
 
-                                if (worldIn.getBlockState(blockpos4).getBlock().getMaterial() == Material.leaves)
+                                if (worldIn.getBlockState(blockpos4).getBlock().isLeaves(worldIn, blockpos4))
                                 {
                                     BlockPos blockpos5 = blockpos4.west();
                                     blockpos1 = blockpos4.east();
                                     BlockPos blockpos2 = blockpos4.north();
                                     BlockPos blockpos3 = blockpos4.south();
 
-                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos5).getBlock().getMaterial() == Material.air)
+                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos5).getBlock().isAir(worldIn, blockpos5))
                                     {
                                         this.func_175922_a(worldIn, blockpos5, BlockVine.EAST_FLAG);
                                     }
 
-                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos1).getBlock().getMaterial() == Material.air)
+                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos1).getBlock().isAir(worldIn, blockpos1))
                                     {
                                         this.func_175922_a(worldIn, blockpos1, BlockVine.WEST_FLAG);
                                     }
 
-                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos2).getBlock().getMaterial() == Material.air)
+                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos2).getBlock().isAir(worldIn, blockpos2))
                                     {
                                         this.func_175922_a(worldIn, blockpos2, BlockVine.SOUTH_FLAG);
                                     }
 
-                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos3).getBlock().getMaterial() == Material.air)
+                                    if (p_180709_2_.nextInt(4) == 0 && worldIn.getBlockState(blockpos3).getBlock().isAir(worldIn, blockpos3))
                                     {
                                         this.func_175922_a(worldIn, blockpos3, BlockVine.NORTH_FLAG);
                                     }
++++ END PATCH
++++ REJECTED PATCH 6
         this.func_175905_a(worldIn, p_175922_2_, Blocks.vine, p_175922_3_);
         int j = 4;
 
-        for (p_175922_2_ = p_175922_2_.down(); worldIn.getBlockState(p_175922_2_).getBlock().getMaterial() == Material.air && j > 0; --j)
+        for (p_175922_2_ = p_175922_2_.down(); worldIn.getBlockState(p_175922_2_).getBlock().isAir(worldIn, p_175922_2_) && j > 0; --j)
         {
             this.func_175905_a(worldIn, p_175922_2_, Blocks.vine, p_175922_3_);
             p_175922_2_ = p_175922_2_.down();
++++ END PATCH
