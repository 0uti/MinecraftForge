++++ REJECTED PATCH 3
     public BiomeGenBase.SpawnListEntry func_175734_a(EnumCreatureType p_175734_1_, BlockPos p_175734_2_)
     {
         List list = this.getChunkProvider().func_177458_a(p_175734_1_, p_175734_2_);
+        list = net.minecraftforge.event.ForgeEventFactory.getPotentialSpawns(this, p_175734_1_, p_175734_2_, list);
         return list != null && !list.isEmpty() ? (BiomeGenBase.SpawnListEntry)WeightedRandom.getRandomItem(this.rand, list) : null;
     }
 
++++ END PATCH
++++ REJECTED PATCH 7
             if (p_175654_2_.requiresUpdates())
             {
                 b0 = 8;
+                //Keeping here as a note for future when it may be restored.
+                boolean isForced = getPersistentChunks().containsKey(new ChunkCoordIntPair(nextticklistentry.position.getX() >> 4, nextticklistentry.position.getZ() >> 4));
+                b0 = (byte)(isForced ? 0 : 8);
 
                 if (this.isAreaLoaded(nextticklistentry.position.add(-b0, -b0, -b0), nextticklistentry.position.add(b0, b0, b0)))
                 {
++++ END PATCH
++++ REJECTED PATCH 9
                 {
                     nextticklistentry = (NextTickListEntry)iterator.next();
                     iterator.remove();
+                    //Keeping here as a note for future when it may be restored.
+                    //boolean isForced = getPersistentChunks().containsKey(new ChunkCoordIntPair(nextticklistentry.xCoord >> 4, nextticklistentry.zCoord >> 4));
+                    //byte b0 = isForced ? 0 : 8;
                     byte b0 = 0;
 
                     if (this.isAreaLoaded(nextticklistentry.position.add(-b0, -b0, -b0), nextticklistentry.position.add(b0, b0, b0)))
++++ END PATCH
++++ REJECTED PATCH 10
     {
         ArrayList arraylist = Lists.newArrayList();
 
-        for (int k1 = 0; k1 < this.loadedTileEntityList.size(); ++k1)
+        //Forge: Optomize this loop to only grab from the chunks it needs
+        for (int x = (p_147486_1_ >> 4); x <= (p_147486_4_ >> 4); x++)
         {
-            TileEntity tileentity = (TileEntity)this.loadedTileEntityList.get(k1);
-            BlockPos blockpos = tileentity.getPos();
-
-            if (blockpos.getX() >= p_147486_1_ && blockpos.getY() >= p_147486_2_ && blockpos.getZ() >= p_147486_3_ && blockpos.getX() < p_147486_4_ && blockpos.getY() < p_147486_5_ && blockpos.getZ() < p_147486_6_)
+            for (int z = (p_147486_3_ >> 4); z <= (p_147486_6_ >> 4); z++)
             {
-                arraylist.add(tileentity);
+                Chunk chunk = this.getChunkFromChunkCoords(x, z);
+                if (chunk != null)
+                {
+                    for (Object obj : chunk.getTileEntityMap().values())
+                    {
+                        TileEntity entity = (TileEntity)obj;
+                        if (!entity.isInvalid())
+                        {
+                            BlockPos pos = entity.getPos();
+                            if (pos.getX() >= p_147486_1_ && pos.getY() >= p_147486_2_ && pos.getZ() >= p_147486_3_ &&
+                                pos.getX() <= p_147486_4_ && pos.getY() <= p_147486_5_ && pos.getZ() <= p_147486_6_)
+                            {
+                                arraylist.add(entity);
+                            }
+
+                        }
+                    }
+                }
             }
         }
 
++++ END PATCH
++++ REJECTED PATCH 14
             }
 
             this.chunkProvider.saveChunks(p_73044_1_, p_73044_2_);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Save(this));
             List list = this.theChunkProviderServer.func_152380_a();
             Iterator iterator = list.iterator();
 
++++ END PATCH
++++ REJECTED PATCH 18
         return this.mcServer.isCallingFromMinecraftThread();
     }
 
+    public java.io.File getChunkSaveLocation()
+    {
+        return ((net.minecraft.world.chunk.storage.AnvilChunkLoader)theChunkProviderServer.chunkLoader).chunkSaveLocation;
+    }
+
     static class ServerBlockEventList extends ArrayList
         {
             private static final String __OBFID = "CL_00001439";
++++ END PATCH
