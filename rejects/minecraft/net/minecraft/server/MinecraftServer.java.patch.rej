++++ REJECTED PATCH 4
             worldsettings = new WorldSettings(worldinfo);
         }
 
-        for (int j = 0; j < this.worldServers.length; ++j)
+        WorldServer overWorld = (WorldServer)(isDemo() ? new DemoWorldServer(this, isavehandler, worldinfo, 0, theProfiler).init() : new WorldServer(this, isavehandler, worldinfo, 0, theProfiler).init());
+        overWorld.initialize(worldsettings);
+        for (int dim : net.minecraftforge.common.DimensionManager.getStaticDimensionIDs())
         {
-            byte b0 = 0;
+            WorldServer world = (dim == 0 ? overWorld : (WorldServer)new WorldServerMulti(this, isavehandler, dim, overWorld, theProfiler).init());
+            world.addWorldAccess(new WorldManager(this, world));
 
-            if (j == 1)
-            {
-                b0 = -1;
-            }
-
-            if (j == 2)
-            {
-                b0 = 1;
-            }
-
-            if (j == 0)
-            {
-                if (this.isDemo())
-                {
-                    this.worldServers[j] = (WorldServer)(new DemoWorldServer(this, isavehandler, worldinfo, b0, this.theProfiler)).init();
-                }
-                else
-                {
-                    this.worldServers[j] = (WorldServer)(new WorldServer(this, isavehandler, worldinfo, b0, this.theProfiler)).init();
-                }
-
-                this.worldServers[j].initialize(worldsettings);
-            }
-            else
-            {
-                this.worldServers[j] = (WorldServer)(new WorldServerMulti(this, isavehandler, b0, this.worldServers[0], this.theProfiler)).init();
-            }
-
-            this.worldServers[j].addWorldAccess(new WorldManager(this, this.worldServers[j]));
-
             if (!this.isSinglePlayer())
             {
-                this.worldServers[j].getWorldInfo().setGameType(this.getGameType());
+                world.getWorldInfo().setGameType(this.getGameType());
             }
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Load(world));
         }
 
-        this.serverConfigManager.setPlayerManager(this.worldServers);
+        this.serverConfigManager.setPlayerManager(new WorldServer[]{ overWorld });
         this.setDifficultyForAllWorlds(this.getDifficulty());
         this.initialWorldChunkLoad();
     }
++++ END PATCH
++++ REJECTED PATCH 5
         this.setUserMessage("menu.generatingTerrain");
         byte b0 = 0;
         logger.info("Preparing start region for level " + b0);
-        WorldServer worldserver = this.worldServers[b0];
+        WorldServer worldserver = net.minecraftforge.common.DimensionManager.getWorld(b0);
         BlockPos blockpos = worldserver.getSpawnPoint();
         long j = getCurrentTimeMillis();
 
++++ END PATCH
++++ REJECTED PATCH 6
         if (!this.worldIsBeingDeleted)
         {
             WorldServer[] aworldserver = this.worldServers;
+            if (aworldserver == null) return; //Forge: Just in case, NPE protection as it has been encountered.
             int i = aworldserver.length;
 
             for (int j = 0; j < i; ++j)
++++ END PATCH
++++ REJECTED PATCH 16
             {
                 try
                 {
-                    ((FutureTask)this.futureTaskQueue.poll()).run();
+                    net.minecraftforge.fml.common.FMLCommonHandler.callFuture(((FutureTask)this.futureTaskQueue.poll()));
                 }
                 catch (Throwable throwable2)
                 {
++++ END PATCH
++++ REJECTED PATCH 17
         }
 
         this.theProfiler.endStartSection("levels");
+        net.minecraftforge.common.chunkio.ChunkIOExecutor.tick();
         int j;
 
-        for (j = 0; j < this.worldServers.length; ++j)
+        Integer[] ids = net.minecraftforge.common.DimensionManager.getIDs(this.tickCounter % 200 == 0);
+        for (int x = 0; x < ids.length; x++)
         {
+            int id = ids[x];
             long i = System.nanoTime();
 
-            if (j == 0 || this.getAllowNether())
+            if (id == 0 || this.getAllowNether())
             {
-                WorldServer worldserver = this.worldServers[j];
+                WorldServer worldserver = net.minecraftforge.common.DimensionManager.getWorld(id);
                 this.theProfiler.startSection(worldserver.getWorldInfo().getWorldName());
 
                 if (this.tickCounter % 20 == 0)
++++ END PATCH
++++ REJECTED PATCH 18
                 }
 
                 this.theProfiler.startSection("tick");
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().onPreWorldTick(worldserver);
                 CrashReport crashreport;
 
                 try
++++ END PATCH
++++ REJECTED PATCH 25
         this.serverPort = port;
     }
 
-    @SideOnly(Side.SERVER)
     public boolean isServerStopped()
     {
         return this.serverStopped;
++++ END PATCH
