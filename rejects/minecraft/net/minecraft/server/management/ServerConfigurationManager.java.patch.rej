++++ REJECTED PATCH 9
         this.playerEntityList.remove(playerIn);
         this.uuidToPlayerMap.remove(playerIn.getUniqueID());
         this.playerStatFiles.remove(playerIn.getUniqueID());
+        net.minecraftforge.common.chunkio.ChunkIOExecutor.adjustPoolSize(this.getCurrentPlayerCount());
         this.sendPacketToAllPlayers(new S38PacketPlayerListItem(S38PacketPlayerListItem.Action.REMOVE_PLAYER, new EntityPlayerMP[] {playerIn}));
     }
 
++++ END PATCH
++++ REJECTED PATCH 10
 
     public EntityPlayerMP recreatePlayerEntity(EntityPlayerMP playerIn, int dimension, boolean conqueredEnd)
     {
+        World world = mcServer.worldServerForDimension(dimension);
+        if (world == null)
+        {
+            dimension = 0;
+        }
+        else if (!world.provider.canRespawnHere())
+        {
+            dimension = world.provider.getRespawnDimension(playerIn);
+        }
+
         playerIn.getServerForPlayer().getEntityTracker().removePlayerFromTrackers(playerIn);
         playerIn.getServerForPlayer().getEntityTracker().untrackEntity(playerIn);
         playerIn.getServerForPlayer().getPlayerManager().removePlayer(playerIn);
         this.playerEntityList.remove(playerIn);
         this.mcServer.worldServerForDimension(playerIn.dimension).removePlayerEntityDangerously(playerIn);
-        BlockPos blockpos = playerIn.getBedLocation();
-        boolean flag1 = playerIn.isSpawnForced();
+        BlockPos blockpos = playerIn.getBedLocation(dimension);
+        boolean flag1 = playerIn.isSpawnForced(dimension);
         playerIn.dimension = dimension;
         Object object;
 
++++ END PATCH
++++ REJECTED PATCH 11
         EntityPlayerMP entityplayermp1 = new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(playerIn.dimension), playerIn.getGameProfile(), (ItemInWorldManager)object);
         entityplayermp1.playerNetServerHandler = playerIn.playerNetServerHandler;
         entityplayermp1.clonePlayer(playerIn, conqueredEnd);
+        entityplayermp1.dimension = dimension;
         entityplayermp1.setEntityId(playerIn.getEntityId());
         entityplayermp1.func_174817_o(playerIn);
         WorldServer worldserver = this.mcServer.worldServerForDimension(playerIn.dimension);
++++ END PATCH
++++ REJECTED PATCH 12
         this.uuidToPlayerMap.put(entityplayermp1.getUniqueID(), entityplayermp1);
         entityplayermp1.addSelfToInternalCraftingInventory();
         entityplayermp1.setHealth(entityplayermp1.getHealth());
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerRespawnEvent(entityplayermp1);
         return entityplayermp1;
     }
 
     public void transferPlayerToDimension(EntityPlayerMP playerIn, int dimension)
     {
+        transferPlayerToDimension(playerIn, dimension, mcServer.worldServerForDimension(dimension).getDefaultTeleporter());
+    }
+
+    public void transferPlayerToDimension(EntityPlayerMP playerIn, int dimension, net.minecraft.world.Teleporter teleporter)
+    {
         int j = playerIn.dimension;
         WorldServer worldserver = this.mcServer.worldServerForDimension(playerIn.dimension);
         playerIn.dimension = dimension;
         WorldServer worldserver1 = this.mcServer.worldServerForDimension(playerIn.dimension);
-        playerIn.playerNetServerHandler.sendPacket(new S07PacketRespawn(playerIn.dimension, playerIn.worldObj.getDifficulty(), playerIn.worldObj.getWorldInfo().getTerrainType(), playerIn.theItemInWorldManager.getGameType()));
+        playerIn.playerNetServerHandler.sendPacket(new S07PacketRespawn(playerIn.dimension, worldserver1.getDifficulty(), worldserver1.getWorldInfo().getTerrainType(), playerIn.theItemInWorldManager.getGameType())); // Forge: Use new dimensions information
         worldserver.removePlayerEntityDangerously(playerIn);
         playerIn.isDead = false;
-        this.transferEntityToWorld(playerIn, j, worldserver, worldserver1);
+        this.transferEntityToWorld(playerIn, j, worldserver, worldserver1, teleporter);
         this.func_72375_a(playerIn, worldserver);
         playerIn.playerNetServerHandler.setPlayerLocation(playerIn.posX, playerIn.posY, playerIn.posZ, playerIn.rotationYaw, playerIn.rotationPitch);
         playerIn.theItemInWorldManager.setWorld(worldserver1);
++++ END PATCH
